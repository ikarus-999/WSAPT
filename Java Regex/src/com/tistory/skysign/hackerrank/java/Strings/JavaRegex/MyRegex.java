package com.tistory.skysign.hackerrank.java.Strings.JavaRegex;

public class MyRegex {
	static public String pattern = "^(25[0-5]|2[0-4][0-9]|(0|1)[0-9][0-9]|[0-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|(0|1)[0-9][0-9]|[0-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|(0|1)[0-9][0-9]|[0-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|(0|1)[0-9][0-9]|[0-9][0-9]|[0-9])$";
//	정규표현식이 좀 길어 졌습니다.
//  IP V4는 각 자리가 점(.)으로 구분되는, 4개의 숫자의 모음이구요,
//	한 자리를 차지 하는 숫자의 패턴은 아래와 같이
//	전부 5가지 패턴 입니다.

//  25[0-5] 25로 시작해서, 0~5
//	2[0-4][0-9] 2로 시작해서, 0~4 중에 0~9
//	(0|1)[0-9][0-9] 0또는 1로 시작해서, 0~9중에 0~9
//	[0-9][0-9] 0~9중에 0~9
//	[0-9] 0부터 9까지

//	이 5가지 패턴을 | 로 이어 주고요,
//	끝에 마침표를 붙여 주면, 아래와 같이 됩니다.
//	(25[0-5]|2[0-4][0-9]|(0|1)[0-9][0-9]|[0-9][0-9]|[0-9])\.
//	이걸 3번대 반복하고, 마지막에 마침표를 때어주면, 정답입니다.
//	이 방식말고, 다른 방식의 정규표현식을 사용할 수도 있지만
//	dynamic programming 과 같은 관점으로, 5가지 패턴의 정규표현식을 만들어 보았습니다.

//	^ <- 문장의 처음
//	$ <- 문장의 끝을 의미합니다.
}
